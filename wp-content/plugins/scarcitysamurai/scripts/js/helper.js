// Generated by CoffeeScript 1.4.0

/*

LEGAL COPYRIGHT NOTICE

Copyright (c) Noble Samurai Pty Ltd, 2008-2013. All Rights Reserved.

This software is proprietary to and embodies the confidential technology of Noble Samurai Pty Ltd.
Possession, use, dissemination or copying of this software and media is authorised only pursuant
to a valid written license from Noble Samurai Pty Ltd. Questions or requests regarding permission may
be sent by email to legal@noblesamurai.com or by post to PO Box 477, Blackburn Victoria 3130, Australia.
*/


(function() {

  jQuery(function($) {
    window.ScarcitySamuraiHelper = (function() {

      function ScarcitySamuraiHelper() {}

      ScarcitySamuraiHelper.init = function() {
        var _ref;
        if (((_ref = $.ui) != null ? _ref.dialog : void 0) != null) {
          return $.ui.dialog.prototype._allowInteraction = function(e) {
            return !!$(e.target).closest('.ui-dialog, .ui-datepicker, .select2-drop').length;
          };
        }
      };

      ScarcitySamuraiHelper.deferredDebounce = function(func, wait) {
        var timeout;
        timeout = null;
        return function() {
          var args, context, deferred, later;
          deferred = $.Deferred();
          context = this;
          args = arguments;
          later = function() {
            timeout = null;
            $.when(func.apply(context, args)).done(function() {
              deferred.resolve();
            });
          };
          clearTimeout(timeout);
          timeout = setTimeout(later, wait);
          deferred.promise();
        };
      };

      ScarcitySamuraiHelper.isNumber = function(str) {
        return /^\d+$/.test(str);
      };

      ScarcitySamuraiHelper.isValidURL = function(url) {
        var re;
        re = new RegExp('^(https?://)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([/\\w \\.-]*)*/?', 'i');
        return re.test(url);
      };

      ScarcitySamuraiHelper.error = function(messages) {
        messages = _.map(messages, function(message) {
          return "\u2022 " + message;
        });
        messages.unshift("Please fix the following errors:\n");
        return alert(messages.join("\n"));
      };

      ScarcitySamuraiHelper.buildAttributesHTML = function(attributes) {
        var key, value;
        if (attributes != null) {
          return ((function() {
            var _results;
            _results = [];
            for (key in attributes) {
              value = attributes[key];
              if (value != null) {
                _results.push("" + key + "=\"" + value + "\"");
              }
            }
            return _results;
          })()).join(' ');
        } else {
          return '';
        }
      };

      ScarcitySamuraiHelper.inlineBannerHTMLComment = function(args) {
        var attributes;
        attributes = this.buildAttributesHTML({
          'id': args.banner_id,
          'align': args.banner_align,
          'show-type': args.banner_show_type,
          'show-value': args.banner_show_value,
          'redirect-page-id': args.banner_redirect_page_id,
          'redirect-url': args.banner_redirect_url
        });
        return "<!-- ss-banner " + attributes + " -->";
      };

      ScarcitySamuraiHelper.inlineTimerHTMLComment = function(args) {
        var attributes;
        if (args != null) {
          args = {
            'timestamp': args.timer_timestamp,
            'format': args.timer_format
          };
        }
        attributes = this.buildAttributesHTML(args);
        if (attributes !== '') {
          attributes += ' ';
        }
        return "<!-- ss-timer " + attributes + "-->";
      };

      ScarcitySamuraiHelper.defaultEditorId = 'sspageeditor';

      ScarcitySamuraiHelper.getEditor = function() {
        return tinymce.get(ScarcitySamuraiHelper.defaultEditorId);
      };

      ScarcitySamuraiHelper.getEditorContent = function() {
        var editor;
        editor = ScarcitySamuraiHelper.getEditor();
        if (editor != null) {
          return editor.save();
        } else {
          return $('#' + ScarcitySamuraiHelper.defaultEditorId).val();
        }
      };

      ScarcitySamuraiHelper.loadPageToEditor = function(settings) {
        var data,
          _this = this;
        data = {
          action: 'ss_get_page_content',
          data: JSON.stringify({
            page_id: settings.page_id
          })
        };
        data = _.extend(data, settings.security_params);
        return $.ajax({
          type: "POST",
          url: ajaxurl,
          data: data,
          dataType: 'json'
        }).done(function(result) {
          var content, editor;
          if (result.success) {
            $('#' + _this.defaultEditorId).val(result.data.content);
            editor = _this.getEditor();
            if (editor != null) {
              content = result.data.content;
              if (editor.getParam('wpautop', true)) {
                content = switchEditors.wpautop(content);
              }
              return editor.setContent(content);
            }
          } else {
            return _this.error(result.data);
          }
        });
      };

      ScarcitySamuraiHelper.ajax = function(action, params, callback) {
        var data, securityParams;
        securityParams = {
          security_token: $('[name="security_token"]').val(),
          _wp_http_referer: $('[name="_wp_http_referer"]').val()
        };
        data = {
          action: action,
          data: JSON.stringify(params)
        };
        data = _.extend(data, securityParams);
        return $.ajax({
          type: "POST",
          url: ajaxurl,
          data: data,
          dataType: 'json'
        }).done(callback);
      };

      ScarcitySamuraiHelper.pageEditorTextarea = function() {
        var $pageEditorTextarea;
        $pageEditorTextarea = $('.ss-page-editor').eq(0);
        if ($pageEditorTextarea.length === 0) {
          $pageEditorTextarea = $('#content');
        }
        return $pageEditorTextarea;
      };

      ScarcitySamuraiHelper.pageEditorMode = function() {
        if (this.pageEditorTextarea().is(':visible')) {
          return 'text';
        } else {
          return 'visual';
        }
      };

      return ScarcitySamuraiHelper;

    }).call(this);
    return ScarcitySamuraiHelper.init();
  });

}).call(this);
